// Code generated by goctl. DO NOT EDIT.
// Source: base.proto

package baseclient

import (
	"context"

	"umbrella.github.com/go-zero-example/rpc/proto/base/base"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = base.Request
	Response = base.Response

	Base interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultBase struct {
		cli zrpc.Client
	}
)

func NewBase(cli zrpc.Client) Base {
	return &defaultBase{
		cli: cli,
	}
}

func (m *defaultBase) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := base.NewBaseClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
